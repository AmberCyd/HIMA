% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hima.R
\name{hima}
\alias{hima}
\title{High-dimensional Mediation Analysis}
\usage{
hima(X, Y, M, COV = NULL, family = "gaussian", penalty = "MCP",
  topN = NULL, scale = TRUE, parallel = TRUE, ncore = 2)
}
\arguments{
\item{X}{a vector of exposure.}

\item{Y}{a vector of outcome.}

\item{M}{a data frame or matrix of high-dimensional mediators. Rows represent samples, columns represent variables.}

\item{COV}{a data frame or matrix of covariates dataset. Default = \code{NULL}.}

\item{family}{Either "gaussian", "binomial", or "poisson", depending on the response. See \code{\link{ncvreg}}}

\item{penalty}{The penalty to be applied to the model. Either "MCP" (the default), "SCAD", or "lasso". See \code{\link{ncvreg}}.}

\item{topN}{an integer specifying the number of top markers from sure independent screening. Default = \code{NULL}. If \code{NULL}, \code{ceiling(n/log10(n))} will be used as \code{topN}, where \code{n} is the sample size.}

\item{scale}{logical. Whether standardization should be applied to the high dimensional mediator data \code{M}. Default = \code{TRUE}.}

\item{parallel}{logical. Enable parallel computing feature? Default = \code{TRUE}.}

\item{ncore}{number of cores to run parallel. Effective when \code{parallel = TRUE}. Default = \code{2}.}
}
\value{
a data.frame contains mediation testing results of selected mediators.
}
\description{
\code{hima} is used to estimate and test high-dimensional mediation effects.
}
\examples{
n <- 100  # sample size
p <- 5000 # the dimension of covariates

alpha <- rep(0, p) # the regression coefficients alpha (exposure --> mediators)
beta <- rep(0, p) # the regression coefficients beta (mediators --> outcome)
alpha[1:3] <- c(0.5, 0.5, 0.3) 
beta[1:3] <- c(0.5, 1.2, 0.3) # the first three makers are true mediators.

simdat = simHIMA(n, p, alpha, beta, seed=2016) # Generate simulation data

hima(simdat$X, simdat$Y, simdat$M, penalty = "SCAD", ncore=detectCores()) # Run HIMA with MCP penalty
hima(simdat$X, simdat$Y, simdat$M, penalty = "SCAD", ncore=detectCores()) # Run HIMA with SCAD penalty
hima(simdat$X, simdat$Y, simdat$M, penalty = "lasso", ncore=detectCores()) # Run HIMA with lasso penalty

}

